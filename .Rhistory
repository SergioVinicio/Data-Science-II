x1 <- c(TRUE, FALSE) ## logical
x2 <- c(T, F) ##logical
x3 <- c("a", "b", "c") ## character
x4 <- 9:29 ## integer
x5 <- c(1+0i, 2+4i) ## complex
X1 <- c(TRUE, FALSE) ## logical
x2 <- c(TRUE, FALSE) ##logical
X6 <- vector("numeric",length=10)
print(x7)
print(x6)
print(x)
class(x)
x7 <- c(0.10, "juan", TRUE)
class(x7)
class(x7)
x8 <- c(pi, 3, TRUE, FALSE, 12.5)
CLASS(X8)
class(x8)
m <- matrix(nrow = 2, ncol = 3)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
dim(m)
x9 <- list(1, "a", TRUE, 1+4i)
x9
x10 <- factor(c("yes","yes","no","yes","no"))
table(x10)
unclass(x10)
x10 <- factor(c("yes","yes","no","yes","no"))
levels = c("yes", "no")
x10
x <- c(1,2,NA,10,3)
is.na(x)
is.nan(x)
is.nan(x11)
x11 <- c(1,2,NA,10,3)
is.na(x11)
is.nan(x11)
x12 <- c(1, 2, Nan, NA, 4)
is.na(x12)
x12 <- c(1, 2, NaN, NA, 4)
is.na(x12)
x <- c(0.5, 0.6) ## numeric
x1 <- c(TRUE, FALSE) ## logical
x2 <- c(TRUE, FALSE) ##logical
x3 <- c("a", "b", "c") ## character
x4 <- 9:29 ## integer
x5 <- c(1+0i, 2+4i) ## complex
X6 <- vector("numeric",length=10)
x7 <- c(0.10, "juan", TRUE)
x8 <- c(pi, 3, TRUE, FALSE, 12.5)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
dim(m)
x9 <- list(1, "a", TRUE, 1+4i)
x9
x10 <- factor(c("yes","yes","no","yes","no"))
levels = c("yes", "no")
x10
table(x10)
unclass(x10)
x11 <- c(1,2,NA,10,3)
is.na(x11)
is.nan(x11)
x12 <- c(1, 2, NaN, NA, 4)
is.na(x12)
x13 <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x13
print(x13)
x13 <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x13
data()
mtcars
class(mtcars)
mtc <- mtcars
View(x13)
View(mtc)
View(m)
View(mtc)
?mtcars
class(mtcars)
head(mtcars,3)
names(mtcars
names(mtcars)
names(mtcars)
install.packages("swirl")
install_course("R Progamming E")
install_course("R Progamming E")
library(swirl)
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Progamming E")
install_course("R Programming E")
"R Programming E"
swirl()
library(swirl)
swirl()
nxt()
dir.create(from = file.path(testdir2), to = testdir3)
dir.create()
dir.create(file.path(testdir3))
play
dir.create(file.path(("testdir2", "testdir3"), recursive = TRUE))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd()
setwd
setwd(old.dir)
library(swirl)
swirl()
1:20
pi:10
15:1
?":"
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
num_vect(0.5, 55, -10, 6)
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("MY", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sergio")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("1:3", "c("X","Y","Z)
paste("1:3","c("X", "Y", "Z")", sep = " ")
paste()
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(Na,1000)
z <- rep(NA, 1000)
my_data <- sample(C(y,z), 100)
my_data <- sample(c(y, z), 100)
na(my_data)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
library(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=speed, y= dist)
plot(x= cars%speed, y= cars$dist)
plot(x = speed, y = dist)
plot
plot(x = cars$speed, y = cars)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot()
plot()
plot("speed")
skip()
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
skip()
skip()
skip()
skip()
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data("mtcars")
data(mtcars)
?boxplot
skip()
hist(mtcars)
hista(mtcars$mpg)
hisy(mtcars$mpg)
hist(mtcars$mpg)
2
library(swirl)
swirl()
swir()
library(swirl)
swirl()
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
C(x)
x
C(3, 5, 7)
x C(3, 5, 7)
x <- C(3, 5, 7)
x(c(3, 5, 7))
c(x(3, 5, 7))
skip
skip()
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect 2)
skip()
vect["bar"]
[c("foo", "bar")]
skip()
1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- C(4,5)
skip()
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
skip()
identical(my_matrix, my_matrix2)
skip()
skip()
data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class()
class(my_data)
skip()
skip()
my_data
library(swirl)
swirl()
TRUE==TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && C(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
|TRUE | C(TRUE, FALSE, FALSE)
C(TRUE, FALSE, FALSE)
SKIP()
skip()
TRUE || C(TRUE, FALSE, FALSE)
skip()
5 > 8 || 6 != 8 && 4 > 3.9
istrue
istrue(6 > 4)
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(integer())
any(ints)
any(ints < 0)
all(ints > 0)
install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
library(Rcpp)
install.packages("forecast", repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages('Rcpp', dependencies = TRUE)
library(ggplot2)
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
library(ggplot2)
install.packages("Rcpp", dependencies = TRUE)
library(ggplot2)
install.packages("Rcpp", dependencies = TRUE)
library(ggplot2)
library(ggplot2)
library(readr)
airquality_hourly_44201_2014 <- read_csv("~/Tareas universidad/3 Semestre/Data Science/Hoja de Trabajo/airquality_hourly_44201_2014.csv")
View(airquality_hourly_44201_2014)
ozone <- view(airquality_hourly_44201_2014)
ozone <- airquality_hourly_44201_2014
names(ozone) <- make.names(names(ozone))
NROW(ozone)
NCOL(ozone)
colnames(ozone)
str(ozone)
summary(ozone)
head(ozone, n=15)
primeras15 <- head(ozone, n=15)
View(primeras15)
library(dplyr)
seleccionadas <- select(ozone, ozone$State.Name, ozone$County.Name, ozone$Date.Local, ozone$Time.Local, ozone$Sample.Measurement )
seleccionadas <- select(ozone, State.Name, County.Name, Date.Local, Time.Local, Sample.Measurement)
View(seleccionadas)
seleccionadas <- select(ozone, State.Name, County.Name, Date.Local, Time.GMT, Sample.Measurement)
filter(seleccionadas, Time.GMT == "19.00")
view(filter(seleccionadas, Time.GMT == "19.00"))
View(filter(seleccionadas, Time.GMT == "19.00"))
Filtro1 <- (filter(seleccionadas, Time.GMT == "19.00"))
Filtro1
Filtro1 <- filter(seleccionadas, Time.GMT == "19.00")
Filtro1
StateCode <- filter(ozone, State.Code == "36")
CountyCode <- filter(ozone, County.Code == "033")
Datelocal <- filter(ozone, Date.Local == "2014-09-30")
seleccionadas2 <- select(ozone, Date.Local, Time.Local, Sample.Measurement)
desc(seleccionadas2$Sample.Measurement)
q()
install.packages(c("broom", "curl", "DBI", "digest", "forecast", "gdtools", "highlight", "jsonlite", "maptools", "mvtnorm", "psych", "Rcpp", "readr", "rmarkdown", "SparseM", "stringi", "stringr", "survival", "swirl", "tseries", "viridis"))
oz <- ozone
install.packages("lubridate")
library(lubridate)
library(readxl)
library()
install.packages("Rcpp")
library("RcppArmadillo", lib.loc="~/R/win-library/3.3")
remove.packages("RcppArmadillo", lib="~/R/win-library/3.3")
install.packages("Rcpp")
install.packages("C:/Users/Vinix/Desktop/Rcpp_0.12.10.zip", repos = NULL, type = "win.binary")
install.packages("Rcpp")
install.packages("survival")
install.packages(c("cluster", "lattice", "survival"), lib="C:/Program Files/R/R-3.3.3/library")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidyr)
choose(8,2)
choose(10,2)
choose(10000,2)
choose(10,1)
choose(100,0)
choose(5,0)
choose(100,97)
choose(100,3)
choose(10,1)
choose(10,3)
choose(120,105)
choose(15000,1500)
choose(1500,1500)
choose(15000,1500)
choose(10,1)
choose(10,2)
choose(3,2)
choose(3,1)
choose(3,5)
choose(5,3
)
choose(3,2)
setwd("~/Tareas universidad/3 Semestre/Data Science/Proyecto 2")
library(foreign)
library(haven)
library(tidyverse)
hogares <- read_sav("hogar.sav")
names(hogares)
str(hogares)
summary(hogares)
mejorasenhogares <- hogares %>% select(AREA,REGION, DEPTO, POBREZA, P01C01, P01C02A,  P01C02B, P01C02C, P01C02D, P01A05E)
mejorasenhogares$mejoras <- ifelse(mejorasenhogares$P01C01 == 1, TRUE, FALSE)
mejorasenhogares$otronivel <- ifelse(mejorasenhogares$P01C02A == 1, TRUE, FALSE)
mejorasenhogares$cuartos <- ifelse(mejorasenhogares$P01C02B == 1, TRUE, FALSE)
mejorasenhogares$muros <- ifelse(mejorasenhogares$P01C02C == 1, TRUE, FALSE)
mejorasenhogares$terrazas <- ifelse(mejorasenhogares$P01C02D == 1, TRUE, FALSE)
mejorasenhogares$contadoragua <- ifelse(mejorasenhogares$P01A05E == 1, TRUE, FALSE)
mejorasenhogares %>% summarise(mejoras.total =sum(mejorasenhogares$mejoras, na.rm = TRUE)/n(), mejorasotroniveltotal =sum(mejorasenhogares$otronivel, na.rm = TRUE)/n(), mejorascuartostotal =sum(mejorasenhogares$cuartos, na.rm = TRUE)/n(), mejorasmurostotal =sum(mejorasenhogares$muros, na.rm = TRUE)/n(), mejorasterrazas.total =sum(mejorasenhogares$terrazas, na.rm = TRUE)/n(), contadoraguatotal =sum(mejorasenhogares$contadoragua, na.rm = TRUE)/n())
mejorasenhogares %>% group_by(as_factor(AREA)) %>% summarise(mejoras.total =sum(mejorasenhogares$mejoras, na.rm = TRUE)/n(), mejorasotroniveltotal =sum(mejorasenhogares$otronivel, na.rm = TRUE)/n(), mejorascuartostotal =sum(mejorasenhogares$cuartos, na.rm = TRUE)/n(), mejorasmurostotal =sum(mejorasenhogares$muros, na.rm = TRUE)/n(), mejorasterrazas.total =sum(mejorasenhogares$terrazas, na.rm = TRUE)/n(), contadoraguatotal =sum(mejorasenhogares$contadoragua, na.rm = TRUE)/n())
mejorasenhogares %>% group_by(as_factor(POBREZA)) %>% summarise(mejoras.total =sum(mejorasenhogares$mejoras, na.rm = TRUE)/n(), mejorasotroniveltotal =sum(mejorasenhogares$otronivel, na.rm = TRUE)/n(), mejorascuartostotal =sum(mejorasenhogares$cuartos, na.rm = TRUE)/n(), mejorasmurostotal =sum(mejorasenhogares$muros, na.rm = TRUE)/n(), mejorasterrazas.total =sum(mejorasenhogares$terrazas, na.rm = TRUE)/n(), contadoraguatotal =sum(mejorasenhogares$contadoragua, na.rm = TRUE)/n())
mejorasenhogares %>% group_by(as_factor(DEPTO)) %>% summarise(mejoras.total =sum(mejorasenhogares$mejoras, na.rm = TRUE)/n(), mejorasotroniveltotal =sum(mejorasenhogares$otronivel, na.rm = TRUE)/n(), mejorascuartostotal =sum(mejorasenhogares$cuartos, na.rm = TRUE)/n(), mejorasmurostotal =sum(mejorasenhogares$muros, na.rm = TRUE)/n(), mejorasterrazas.total =sum(mejorasenhogares$terrazas, na.rm = TRUE)/n(), contadoraguatotal =sum(mejorasenhogares$contadoragua, na.rm = TRUE)/n())
VisitaMedico <- (0.01251322*100)
library(tidyverse)
library(haven)
setwd("~/Tareas universidad/3 Semestre/Data Science/Proyecto 2")
personas <- read_sav("personas.sav")
View(personas)
salud <- personas %>% select(AREA, DEPTO, POBREZA, PPA02, P05D02, P05D04A, P05D07)
View(salud)
salud %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
salud$visita.medico <- ifelse(salud$P05D02 == 1, TRUE, FALSE)
salud$consulta.medico <- ifelse(salud$P05D04A == 1, TRUE, FALSE)
salud$consulta.curandero <- ifelse(salud$P05D04A == 4, TRUE, FALSE)
salud$consulta.comadrona <- ifelse(salud$P05D04A == 6, TRUE, FALSE)
salud$consulta.familiar <- ifelse(salud$P05D04A == 7, TRUE, FALSE)
salud$consulta.automedico <- ifelse(salud$P05D04A == 8, TRUE, FALSE)
salud$consulta.nula <- ifelse(salud$P05D04A == 9, TRUE, FALSE)
salud$hospital.publico <- ifelse(salud$P05D07 == 1, TRUE, FALSE)
salud$hospital.privado <- ifelse(salud$P05D07 == 3, TRUE, FALSE)
salud$igss <- ifelse(salud$P05D07 == 2, TRUE, FALSE)
salud %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
visitamedica <- salud %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
View(visitamedica)
visitamedica <- salud %>% group_by(as_factor(DEPTO)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
View(visitamedica)
sum(visitamedica$visita.medico.total)
myData <- myData[-c(2, 4, 6), ]
visitamedica <- visitamedica[-c(1)]
View(visitamedica)
visitamedica <- visitamedica[-r(1)]
visitamedica <- visitamedica[-14,]
View(visitamedica)
visitamedica <- salud %>% group_by(as_factor(DEPTO)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
visitamedica <- visitamedica[-14,]
View(visitamedica)
visitamedica <- salud %>% group_by(as_factor(DEPTO)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
visitamedica <- visitamedica[-1,]
View(salud)
View(visitamedica)
VisitaDepartamento <- sum(visitamedica$visita.medico.total)/n()
VisitaDepartamento <- sum(visitamedica$visita.medico.total)/21
View(salud)
visitamedica <- salud %>% group_by(as_factor(DEPTO)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
sum(visitamedica$visita.medico.total)/22
visitamedica <- salud %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
salud %>% group_by(as_factor(AREA)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
visitamedica <- salud %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
View(visitamedica)
visitamedica <- salud %>% group_by(as_factor(DEPTO)) %>% summarise(visita.medico.total = sum(visita.medico, na.rm = TRUE)/n(), consulta.medico.total = sum(consulta.medico, na.rm = TRUE)/n(), consulta.curandero.total = sum(consulta.curandero, na.rm= TRUE)/n(), consulta.comadrona.total = sum(consulta.comadrona, na.rm= TRUE)/ n(), consulta.automedico.total = sum(consulta.automedico, na.rm = TRUE)/n(), consulta.familiar.total = sum(consulta.familiar, na.rm = TRUE)/n(), consulta.nula.total = sum(consulta.nula, na.rm = TRUE)/n(), hospital.publico.total = sum(hospital.publico, na.rm = TRUE)/n(),hospital.privado.total = sum(hospital.privado, na.rm = TRUE)/n(), igss.total = sum(igss, na.rm = TRUE)/n())
visitamedica <- visitamedica[-1,]
salud <- personas %>% select(AREA, DEPTO, POBREZA, PPA02, P05D02, P05D04A, P05D07)
VisitaDepartamento <- sum(visitamedica$visita.medico.total)/21
VisitaDepartamento <- (sum(visitamedica$visita.medico.total)/21)*100
setwd("~/Tareas universidad/3 Semestre/Data Science/Proyecto 2")
library(foreign)
library(haven)
library(tidyverse)
setwd("~/Tareas universidad/4 Semestre/Data Science II/Ejercicios/6 Ejercicio")
dataset = read.csv('Social_Network_Ads.csv')
dataset = dataset[3:5]
library(rpart)
dataset$Purchased = factor(dataset$Purchased, levels = c(0, 1))
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
library(rpart)
classifier = rpart(formula = Purchased ~ .,
data = training_set)
y_pred = predict(classifier, newdata = test_set[-3], type = 'class')
cm = table(test_set[, 3], y_pred)
cm
library(ElemStatLearn)
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
y_grid = predict(classifier, newdata = grid_set, type = 'class')
plot(set[, -3],
main = 'Decision Tree Classification (Training set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
y_grid = predict(classifier, newdata = grid_set, type = 'class')
plot(set[, -3], main = 'Decision Tree Classification (Test set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
